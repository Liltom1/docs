import{_ as e,o as p,c as t,a5 as i}from"./chunks/framework.W6qmpZhh.js";const u=JSON.parse('{"title":"","description":"","frontmatter":{"next":{"text":"Tcp","link":"../Network/Tcp"},"prev":{"text":"首页","link":"/"}},"headers":[],"relativePath":"Network/OSI七层网络参考模型.md","filePath":"Network/OSI七层网络参考模型.md","lastUpdated":1733476867000}'),l={name:"Network/OSI七层网络参考模型.md"};function o(s,a,r,n,d,h){return p(),t("div",null,a[0]||(a[0]=[i('<h4 id="osi七层网络参考模型" tabindex="-1"><code>OSI</code>七层网络参考模型 <a class="header-anchor" href="#osi七层网络参考模型" aria-label="Permalink to &quot;`OSI`七层网络参考模型&quot;">​</a></h4><h5 id="_1-应用层" tabindex="-1">1.应用层 <a class="header-anchor" href="#_1-应用层" aria-label="Permalink to &quot;1.应用层&quot;">​</a></h5><p>应用层就是我们使用最多的一层，例如ajax调用接口发送http请求，再比如域名系统DNS，邮件协议SMTP，webSocket长连接，SSH协议</p><h5 id="_2-表示层" tabindex="-1">2.表示层 <a class="header-anchor" href="#_2-表示层" aria-label="Permalink to &quot;2.表示层&quot;">​</a></h5><p>表示层主要做了几件重要的事情 安全，压缩，也是程序在网络中的一个翻译官。</p><p>1.安全 在你的数据发送之前进行加密，在接受者的表示层进行解密。</p><p>2.表示层还会对图片文件等格式进行解码和编码 例如 JPEG、ASCll 图片是人类能读懂的计算机需要转换成计算机能读懂的编码。</p><p>这一层叫报文</p><h5 id="_3-会话层" tabindex="-1">3.会话层 <a class="header-anchor" href="#_3-会话层" aria-label="Permalink to &quot;3.会话层&quot;">​</a></h5><p>定义</p><p>会话层，是在发送方和接收方之间进行通信时创建、维持、之后终止或断开连接的地方，与电话通话有点相似。</p><p>会话层定义了一种机制，允许发送方和接收方启动或停止请求会话，以及当双方发生拥塞时仍然能保持对话。</p><p>会话层包含了一种称为<strong>检查点（Checkpoint）</strong> 的机制来维持可靠会话。检查点定义了一个最接近成功通信的点，并且定义了当发生内容丢失或损坏时需要回滚以便恢复丢失或损坏数据的点，即<strong>断点下载</strong>的原理</p><p>这一层叫报文</p><h5 id="_4-传输层" tabindex="-1">4.传输层 <a class="header-anchor" href="#_4-传输层" aria-label="Permalink to &quot;4.传输层&quot;">​</a></h5><p>定义</p><p>传输层主要就是定义我们的端口号，以及控流，和校验。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>TCP 是面向连接的协议并且TCP是可靠的</span></span></code></pre></div><p>因为TCP会进行三次握手四次挥手所以是可靠的，但是这样会降低速度</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>UDP 具有较好的实时性 效率比TCP高</span></span></code></pre></div><p>UDP是没有三次握手四次挥手的，故此不稳定，但是速度快 常用于直播，游戏</p><p>这一层叫数据段</p><h5 id="_5-网络层" tabindex="-1">5.网络层 <a class="header-anchor" href="#_5-网络层" aria-label="Permalink to &quot;5.网络层&quot;">​</a></h5><p>定义：该层控制数据链路层与传输层之间的信息转发，建立、维持和终止网络的连接。具体地说，数据链路层的数据在这一层被转换为数据包，然后通过路径选择、分段组合、顺序、进/出路由等控制，将信息从一个网络设备传送到另一个网络设备</p><p>1.寻址：对网络层而言使用IP地址来唯一标识互联网上的设备，网络层依靠IP地址进行相互通信（类似于数据链路层的MAC地址）</p><p>2.路由：在同一个网络中的内部通信并不需要网络层设备，仅仅靠数据链路层就可以完成相互通信，对于不同的网络之间相互通信则必须借助路由器等三层设备。</p><p>路由器就是在第三层工作的</p><p>在数据链路层的时候说过了如果所有的使用互联网的用户在同一个网段中，会产生广播风暴，所以要将用户进行划分，让他们在不同的网段中，自己在自己的小网段中广播。而互联网就是这无数的子网络构成的一个巨型网络。</p><p>在网络层中引入了一套新的地址，让我们能够区分不同的网段。这套地址就叫做“网络地址”，简称“网址”。</p><p>于是，”网络层”出现以后，每台计算机有了两种地址，一种是MAC地址，另一种是网络地址。两种地址之间没有任何联系，MAC地址是绑定在网卡上的，网络地址则是管理员分配的，它们只是随机组合在一起。</p><p>网络地址帮助我们确定计算机所在的子网络，MAC地址则将数据包送到该子网络中的目标网卡。因此，从逻辑上可以推断，必定是先处理网络地址，然后再处理MAC地址。</p><p>这一层中有一个规定网络地址的协议，叫做IP协议，它所定义的地址，就被称为IP地址。目前，广泛采用的是IP协议第四版，简称IPv4。这个版本规定，网络地址由32个二进制位组成。因为IPv4的地址已经不够用了，所以现在推广IPv6。</p><h5 id="_6-数据链路层" tabindex="-1">6.数据链路层 <a class="header-anchor" href="#_6-数据链路层" aria-label="Permalink to &quot;6.数据链路层&quot;">​</a></h5><p>定义</p><p>将比特流组装成数据帧，mac地址 macid 对比特流分组，并拼装地址，MAC地址：每个网卡的唯一标识，他是进行广播的方式进行传输，局域网内所有计算机都可以收到消息，这一次的单位叫数据帧 用交换机进行交换</p><h5 id="_7-物理层" tabindex="-1">7.物理层 <a class="header-anchor" href="#_7-物理层" aria-label="Permalink to &quot;7.物理层&quot;">​</a></h5><p>定义</p><p>物理层是直接和物理介质打交道的。</p><p>物理层的设备 网卡，网线，集线器，中继器，调制解调器</p><p>物理层信道.</p><p>有线信道</p><ul><li><p>明线：传输损耗低，容易受环境天气影响</p></li><li><p>对称电缆</p></li><li><p>同轴电缆</p></li><li><p>光纤</p></li></ul><p>无线信道</p><ul><li>无线电波</li></ul><p>总结，电光，无线，电波 01010101电信号 比特 传输比特流</p>',45)]))}const _=e(l,[["render",o]]);export{u as __pageData,_ as default};
