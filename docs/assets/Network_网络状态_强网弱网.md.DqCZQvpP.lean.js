import{_ as i,o as a,c as n,a5 as t}from"./chunks/framework.W6qmpZhh.js";const E=JSON.parse('{"title":"","description":"","frontmatter":{"next":{"text":"XSS跨站脚本攻击","link":"../Network/XSS跨站脚本攻击"},"prev":{"text":"JWT","link":"../Network/JWT"}},"headers":[],"relativePath":"Network/网络状态&强网弱网.md","filePath":"Network/网络状态&强网弱网.md","lastUpdated":1734791121000}'),e={name:"Network/网络状态&强网弱网.md"};function l(h,s,p,k,o,d){return a(),n("div",null,s[0]||(s[0]=[t(`<h4 id="网络状态-强网弱网" tabindex="-1">网络状态&amp;强网弱网 <a class="header-anchor" href="#网络状态-强网弱网" aria-label="Permalink to &quot;网络状态&amp;强网弱网&quot;">​</a></h4><h5 id="网络状态" tabindex="-1">网络状态 <a class="header-anchor" href="#网络状态" aria-label="Permalink to &quot;网络状态&quot;">​</a></h5><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">consloe.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(navigator.online) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// true在线false离线</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">window.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addEventListener</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;online&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;网络已连接&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">window.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addEventListener</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;offline&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;网络已断开&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><h5 id="navigator-connection" tabindex="-1"><code>navigator.connection</code> <a class="header-anchor" href="#navigator-connection" aria-label="Permalink to &quot;\`navigator.connection\`&quot;">​</a></h5><p>定义</p><p>Web API 中提供的一种获取网络连接相关信息的接口。该接口返回的是一个 <code>NetworkInformation</code> 对象，包含了多个关于用户设备网络连接状况的属性，如网络类型、带宽、往返时间等</p><ul><li><code>downlink</code>: 当前网络连接的估计下行速度（单位为 Mbps）</li><li><code>downlinkMax</code>: 设备网络连接最大可能下行速度（单位为 Mbps）</li><li><code>effectiveType</code>: 当前网络连接的估计速度类型（如 slow-2g、2g、3g、4g 等）</li><li><code>rtt</code>: 当前网络连接的估计往返时间（单位为毫秒）</li><li><code>saveData</code>: 是否处于数据节省模式</li></ul><p>在使用 <code>navigator.connection</code> API 之前，需要先进行是否支持的判断。可以通过以下方式判断浏览器是否支持该 API</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;connection&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> navigator) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 支持 navigator.connection API</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 不支持 navigator.connection API</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div>`,9)]))}const c=i(e,[["render",l]]);export{E as __pageData,c as default};
