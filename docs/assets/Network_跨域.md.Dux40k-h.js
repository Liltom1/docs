import{_ as e,o as p,c as a,a5 as r}from"./chunks/framework.W6qmpZhh.js";const _=JSON.parse('{"title":"","description":"","frontmatter":{"next":{"text":"Ajax","link":"../Network/Ajax"},"prev":{"text":"实现HTTP服务","link":"../Network/实现HTTP服务"}},"headers":[],"relativePath":"Network/跨域.md","filePath":"Network/跨域.md","lastUpdated":null}'),n={name:"Network/跨域.md"};function o(s,t,i,l,c,d){return p(),a("div",null,t[0]||(t[0]=[r('<h4 id="跨域" tabindex="-1">跨域 <a class="header-anchor" href="#跨域" aria-label="Permalink to &quot;跨域&quot;">​</a></h4><p>为什么会跨域？</p><p>协议不同，IP不同，端口不同</p><p>解决方案</p><p>1、jsonp</p><p>原理就是通过 script 的 src 不受同源策略限制，可以跨域请求数据来实现</p><p>缺点：</p><p>只能使用get 请求，不安全、不易维护</p><p>一个函数，这个函数是在前端定义的，后端会把值注入到这个函数的参数里面</p><p>2、前端代理</p><p>需要<strong>构建工具</strong>帮助，只对开发环境有效，上线需要 nginx</p><p>3.后端设置请求头 --》 CORS</p><p>4、nginx代理</p>',13)]))}const k=e(n,[["render",o]]);export{_ as __pageData,k as default};
