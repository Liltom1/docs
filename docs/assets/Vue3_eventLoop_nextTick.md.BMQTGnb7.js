import{_ as t,o as a,c as n,a5 as o}from"./chunks/framework.BZH2Um--.js";const u=JSON.parse('{"title":"","description":"","frontmatter":{"prev":{"text":"css中Style完整新特性","link":"../Vue3/css中Style完整新特性"},"next":{"text":"H5适配","link":"../Vue3/H5适配"}},"headers":[],"relativePath":"Vue3/eventLoop&nextTick.md","filePath":"Vue3/eventLoop&nextTick.md","lastUpdated":1733150336000}'),i={name:"Vue3/eventLoop&nextTick.md"};function p(r,e,l,c,s,d){return a(),n("div",null,e[0]||(e[0]=[o('<h4 id="eventloop-nexttick" tabindex="-1">eventLoop&amp;nextTick <a class="header-anchor" href="#eventloop-nexttick" aria-label="Permalink to &quot;eventLoop&amp;nextTick&quot;">​</a></h4><h5 id="_1-js的执行机制" tabindex="-1">1.Js的执行机制 <a class="header-anchor" href="#_1-js的执行机制" aria-label="Permalink to &quot;1.Js的执行机制&quot;">​</a></h5><h6 id="同步任务" tabindex="-1">同步任务 <a class="header-anchor" href="#同步任务" aria-label="Permalink to &quot;同步任务&quot;">​</a></h6><p>代码从上到下执行</p><h6 id="异步任务" tabindex="-1">异步任务 <a class="header-anchor" href="#异步任务" aria-label="Permalink to &quot;异步任务&quot;">​</a></h6><ul><li>宏任务</li></ul><p>script标签中的代码，setTimeout，setInterval，UI交互事件，postMessage，Ajax</p><ul><li>微任务</li></ul><p>Promise.then catch finally，MutaionObserver，process.nextTick(node.js环境)</p><p>运行的机制</p><p>同步任务，在主进程中的执行栈，主线程之外还有一个任务队列，执行异步任务，在异步任务中先执行宏任务，然后清空宏任务中的微任务</p><p><code>nextTick</code> 就是创建一个异步任务，那么它需要等到同步任务执行完成后才执行。</p><h5 id="_2-nexttick" tabindex="-1">2.nextTick <a class="header-anchor" href="#_2-nexttick" aria-label="Permalink to &quot;2.nextTick&quot;">​</a></h5><p>下一帧需要做的事情</p><p>一针需要做什么事情</p><p>1.处理用户的事件，就是event 例如 click，input change 等。</p><p>2.执行定时器任务</p><p>3.执行 requestAnimationFrame</p><p>4.执行dom 的回流与重绘</p><p>5.计算更新图层的绘制指令</p><p>6.绘制指令合并主线程 如果有空余时间会执行 requestidlecallback</p>',21)]))}const x=t(i,[["render",p]]);export{u as __pageData,x as default};
