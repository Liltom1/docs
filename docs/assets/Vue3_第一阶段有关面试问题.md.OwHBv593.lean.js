import{_ as p,o as d,c as n,j as o,a as t,b as r,a6 as s,a5 as a}from"./chunks/framework.W6qmpZhh.js";const P=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"Vue3/第一阶段有关面试问题.md","filePath":"Vue3/第一阶段有关面试问题.md","lastUpdated":1733391939000}'),c={name:"Vue3/第一阶段有关面试问题.md"};function i(l,e,u,m,f,y){return d(),n("div",null,[e[4]||(e[4]=o("p",null,"有关面试问题",-1)),e[5]||(e[5]=o("p",null,"父子深层间传值 Provide/Inject(依赖注入)",-1)),o("p",null,[e[0]||(e[0]=t("异步组件 ")),e[1]||(e[1]=o("code",null,"defineAsyncComponent",-1)),e[2]||(e[2]=t(" 注册,使用场景是")),(d(),r(s)),e[3]||(e[3]=t(" 包裹"))]),e[6]||(e[6]=a("<p><code>vue3</code>响应式原理Proxy代理 与<code>vue2</code>不同 <code>vue2</code>使用的是<code>object.definePropoty</code> <code>object.definePropoty</code>会递归data中的数据，给他们加上监听，关于数组</p><p>symbol与泛型</p><p>泛型，在不知道是什么类型的时候 使用泛型，传什么类型就是什么类型，动态类型</p><p>symbol 可以当作唯一值，<code>Symbol.iterator</code>迭代器 一步一步向下执行</p><p>泛型工具</p><p>主要有pick,Omit,Partial,Required</p><p><code>nextTick</code></p><p>先从宏任务，微任务为切入点,</p><p>宏任务 :<code>setTimeout</code>,定时器,script</p><p>微任务：<code>promise.then</code> <code>catch</code> <code>finally</code></p><p><code>nextTick</code>下一帧需要做的事情</p>",11))])}const _=p(c,[["render",i]]);export{P as __pageData,_ as default};
